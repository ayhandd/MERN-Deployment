{"version":3,"sources":["components/PetList.jsx","pages/Main.jsx","components/PetAdd.jsx","components/PetDetail.jsx","components/PetEdit.jsx","App.js","serviceWorker.js","index.js"],"names":["PetList","useState","list","setlist","useEffect","axios","get","then","res","data","Pet","catch","err","console","log","className","scope","sort","a","b","type","map","pet","idx","key","name","to","_id","onClick","navigate","Main","PetAdd","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errs","setErrs","onSubmit","e","preventDefault","post","error","errors","onChange","target","value","message","PetDetail","props","setPet","like","setLike","id","delete","disabled","PetEdit","loaded","setLoaded","put","App","path","default","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53e168d5.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link, navigate} from '@reach/router'\nimport axios from 'axios'\n\nconst PetList = () => {\n    const [list, setlist] = useState([])\n    useEffect(() => {\n        axios.get(\"http://localhost:8000/api/pets\")\n        .then(res => {\n            setlist(res.data.Pet)\n        })\n        .catch(err =>  console.log(err))\n    },[])\n    return(\n        <div className=\"container\">\n            <h1>Pet Shelter</h1>\n            <h4>These pets are looking for a good home </h4>\n            <table className=\"table table-sm\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Type</th>\n                        <th scope=\"col\">Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n            {\n                list.sort((a, b) => (a.type > b.type) ? 1 : -1).map((pet, idx) => (\n                    <tr key={idx}>\n                        <td>{pet.name}</td>\n                        <td>{pet.type}</td>\n                        <td>\n                            <Link to={`/pet/${pet._id}`}>details</Link> | \n                            <Link to={`/pet/update/${pet._id}`}>edit</Link>\n                        </td>\n                    </tr>\n                ))\n            }\n            </tbody>\n            </table>\n            <button className=\"btn btn-secondary btn-lg m-1\" onClick={() => navigate(\"/pet/new\")}>Add a new pet to the shelter</button>\n        </div>\n    )\n}\n\nexport default PetList;","import React from 'react'\nimport PetList from '../components/PetList'\n\nconst Main = () =>{\n    return(\n        <div className=\"container mt-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <PetList className=\"col\"/>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Main;","import React, { useState } from 'react'\nimport axios from 'axios'\nimport {navigate} from \"@reach/router\"\n\nconst PetAdd = () => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\")\n    const [skill2, setSkill2] = useState(\"\")\n    const [skill3, setSkill3] = useState(\"\")\n    const [errs, setErrs] = useState(\"\");\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        axios.post('http://localhost:8000/api/pet/new', {\n            name,\n            type,\n            description,\n            skill1,\n            skill2,\n            skill3\n        })\n        .then(res => {\n            if(res.data.error){\n                setErrs(res.data.error.errors);\n            }else{\n                navigate(`/`)\n            }\n        })\n        .catch(err => console.log(err))\n    }\n    return(\n        <div className=\"container\">\n            <h1>Pet Shelter</h1>\n            <h4>Know a pet needing a home?</h4>\n            <ul className=\"nav justify-content-end\">\n                <li className=\"nav-item\">\n                    <button className=\"btn btn-secondary btn-m\" onClick={() => navigate(`/`)}>Back to Home</button>\n                </li>\n            </ul>\n            <form onSubmit={onSubmit}>\n                \n                    <div className=\"form-group col-md-6\">\n                        <label>Pet Name:</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"name\" onChange={(e) => setName(e.target.value)}/>\n                        {errs.name ? <p className=\"text-danger small\">{errs.name.message}</p>: null}\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Pet Type</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"type\" onChange={(e) => setType(e.target.value)}/>\n                        {errs.type ? <p className=\"text-danger small\">{errs.type.message}</p>: null}\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Description</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"description\" name=\"description\" onChange={(e) => setDescription(e.target.value)}/>\n                        {errs.description ? <p className=\"text-danger small\">{errs.description.message}</p>: null}\n                    </div>\n                    <p>Skills (optional):</p>\n                    <div className=\"form-group col-md-6\">\n                        <label>Skill 1:</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill1\" onChange={(e) => setSkill1(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Skill 2:</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill2\" onChange={(e) => setSkill2(e.target.value)}/>\n                    </div>\n                    <div className=\"form-group col-md-6\">\n                        <label>Skill 3:</label>\n                        <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill3\" onChange={(e) => setSkill3(e.target.value)}/>\n                    </div>\n            \n                <input className=\"btn btn-primary btn-lg\" type=\"submit\" value=\"Add Pet\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default PetAdd;","import React, {useEffect, useState} from 'react'\nimport {navigate} from '@reach/router'\nimport axios from 'axios'\n\nconst PetDetail = (props) => {\n    const [pet, setPet] = useState({})\n    const [like, setLike] = useState(0);\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pet/${props.id}`)\n        .then(res => setPet(res.data))\n        .catch(err =>  console.log(err))\n    },[])\n    const deletePet = () => {\n        axios.delete(`http://localhost:8000/api/pet/delete/${props.id}`)\n        .then(res => navigate(\"/products\"))\n        .catch(err => console.log(err))\n    }\n    const likeCount = (e) => {\n        setLike(like +1);\n        e.target.disabled = true\n    }\n    return(\n        <div className=\"container\">\n            <h1>Pet Shelter</h1>\n            <h4>Details about : {pet.name}</h4>\n        <div className=\"card text-center\">\n        <div className=\"card-header font-weight-bold\">{pet.name}</div>\n        <div className=\"card-body\">\n        <dl className=\"row card-text\">\n            <dt className=\"col-sm\">Pet Type :</dt>\n            <dd className=\"col-sm\">{pet.type}</dd>\n        </dl>\n        <dl className=\"row card-text\">\n            <dt className=\"col-sm\">Description :</dt>\n            <dd className=\"col-sm\">{pet.description}</dd>\n        </dl>\n        <dl className=\"row card-text\">\n            <dt className=\"col-sm-6\">Skills :</dt>\n            <dd className=\"col-sm-6\">{pet.skill1}</dd>\n            <dt className=\"col-sm-6\"></dt>\n            <dd className=\"col-sm-6\">{pet.skill2}</dd>\n            <dt className=\"col-sm-6\"></dt>\n            <dd className=\"col-sm-6\">{pet.skill3}</dd>\n        </dl>\n            <button className=\"btn btn-danger m-1\" onClick={deletePet}>Adopt {pet.name}</button>\n            <button className=\"btn btn-secondary m-1\" onClick={() => navigate(\"/\")}>Back to Home</button>\n            <button className=\"btn btn-success m-1\" onClick={likeCount}>Like {pet.name}</button>\n            <p>{like} like(s)</p>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default PetDetail;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {navigate} from \"@reach/router\"\n\nconst PetEdit = (props) => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill1, setSkill1] = useState(\"\")\n    const [skill2, setSkill2] = useState(\"\")\n    const [skill3, setSkill3] = useState(\"\")\n    const [errs, setErrs] = useState(\"\");\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pet/${props.id}`)\n        .then(res =>{\n            setName(res.data.name);\n            setType(res.data.type);\n            setDescription(res.data.description);\n            setSkill1(res.data.skill1);\n            setSkill2(res.data.skill2);\n            setSkill3(res.data.skill3);\n            setLoaded(true);\n        })\n        .catch(err =>  console.log(err))\n    },[])\n\n    const onUpdate = e =>{\n        e.preventDefault();\n        axios.put(`http://localhost:8000/api/pet/update/${props.id}`, {\n            name,\n            type,\n            description,\n            skill1,\n            skill2,\n            skill3\n        })\n        .then(res => \n            {\n                if(res.data.error){\n                    setErrs(res.data.error.errors);\n                }else{\n                    navigate(`/pet/${props.id}`)\n                }\n            })\n        .catch(err => console.log(err))\n    }\n    return(\n        <div className=\"container\">\n        <h1>Pet Shelter</h1>\n        <h4>Know a pet needing a home?</h4>\n        <ul className=\"nav justify-content-end\">\n            <li className=\"nav-item\">\n                <button className=\"btn btn-secondary btn-m\" onClick={() => navigate(`/`)}>Back to Home</button>\n            </li>\n        </ul>\n        {loaded && (\n        <form onSubmit={onUpdate}>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label>Pet Name:</label>\n                    <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)}/>\n                    {errs.name ? <p className=\"text-danger small\">{errs.name.message}</p>: null}\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <p>Skills (optional):</p>\n                    <label>Skill 1:</label>\n                    <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill1\" value={skill1} onChange={(e) => setSkill1(e.target.value)}/>\n                </div>\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label>Pet Type</label>\n                    <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"type\" value={type} onChange={(e) => setType(e.target.value)}/>\n                    {errs.type ? <p className=\"text-danger small\">{errs.type.message}</p>: null}\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label>Skill 2:</label>\n                    <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill2\" value={skill2} onChange={(e) => setSkill2(e.target.value)}/>\n                </div>\n            </div>\n        <div className=\"form-row\">\n            <div className=\"form-group col-md-6\">\n                <label>Description</label>\n                <input className=\"form-control form-control-sm w-50\" type=\"description\" name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)}/>\n                {errs.description ? <p className=\"text-danger small\">{errs.description.message}</p>: null}\n            </div>\n            <div className=\"form-group col-md-6\">\n                <label>Skill 3:</label>\n                <input className=\"form-control form-control-sm w-50\" type=\"text\" name=\"skill3\" value={skill3} onChange={(e) => setSkill3(e.target.value)}/>\n            </div>\n        </div>\n            <input className=\"btn btn-primary btn-lg\" type=\"submit\" value=\"Edit Pet\"/>\n        </form>)}\n    </div>\n    )\n}\n\nexport default PetEdit;","import React from 'react';\nimport {Router} from \"@reach/router\"\nimport Main from \"./pages/Main\"\nimport PetAdd from \"./components/PetAdd\"\nimport PetDetail from \"./components/PetDetail\"\nimport PetEdit from \"./components/PetEdit\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Main path=\"/\" default/>\n        <PetAdd path=\"/pet/new\"/>\n        <PetDetail path=\"/pet/:id\"/>\n        <PetEdit path=\"/pet/update/:id\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}